{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Percona Distribution for PostgreSQL 11 Documentation \u00b6 Percona Distribution for PostgreSQL is a collection of tools to assist you in managing your PostgreSQL database system: it installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: pg_repack rebuilds PostgreSQL database objects pgAudit provides detailed session or object audit logging via the standard PostgreSQL logging facility pgBackRest is a backup and restore solution for PostgreSQL Patroni is a HA (High Availability) solution for PostgreSQL. pg_stat_monitor (Tech Preview Feature 1 ) collects and aggregates statistics for PostgreSQL and provides histogram information. A collection of additional PostgreSQL contrib extensions See also Blog Posts pgBackRest - A Great Backup Solution and a Wonderful Year of Growth Securing PostgreSQL as an Enterprise-Grade Environment Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 2 Installation and Upgrade \u00b6 Installing Percona Distribution for PostgreSQL Minor Upgrade of Percona Distribution for PostgreSQL Extensions \u00b6 pg_stat_monitor Uninstall Percona Distribution for PostgreSQL \u00b6 Uninstalling Percona Distribution for PostgreSQL Release Notes \u00b6 Release Notes Reference \u00b6 Licensing Tech Preview Features are not yet ready for enterprise use and are not included in support via . They are included in this release so that users can provide feedback prior to the full release of the feature in a future release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9 https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11 Documentation"},{"location":"index.html#percona-distribution-for-postgresql-11-documentation","text":"Percona Distribution for PostgreSQL is a collection of tools to assist you in managing your PostgreSQL database system: it installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: pg_repack rebuilds PostgreSQL database objects pgAudit provides detailed session or object audit logging via the standard PostgreSQL logging facility pgBackRest is a backup and restore solution for PostgreSQL Patroni is a HA (High Availability) solution for PostgreSQL. pg_stat_monitor (Tech Preview Feature 1 ) collects and aggregates statistics for PostgreSQL and provides histogram information. A collection of additional PostgreSQL contrib extensions See also Blog Posts pgBackRest - A Great Backup Solution and a Wonderful Year of Growth Securing PostgreSQL as an Enterprise-Grade Environment Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 2","title":"Percona Distribution for PostgreSQL 11 Documentation"},{"location":"index.html#installation-and-upgrade","text":"Installing Percona Distribution for PostgreSQL Minor Upgrade of Percona Distribution for PostgreSQL","title":"Installation and Upgrade"},{"location":"index.html#extensions","text":"pg_stat_monitor","title":"Extensions"},{"location":"index.html#uninstall-percona-distribution-for-postgresql","text":"Uninstalling Percona Distribution for PostgreSQL","title":"Uninstall Percona Distribution for PostgreSQL"},{"location":"index.html#release-notes","text":"Release Notes","title":"Release Notes"},{"location":"index.html#reference","text":"Licensing Tech Preview Features are not yet ready for enterprise use and are not included in support via . They are included in this release so that users can provide feedback prior to the full release of the feature in a future release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9 https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Reference"},{"location":"extensions.html","text":"Extensions \u00b6 pg_stat_monitor","title":"Extensions"},{"location":"extensions.html#extensions","text":"pg_stat_monitor","title":"Extensions"},{"location":"installation-and-update.html","text":"Installation and Upgrade \u00b6 This section provides instructions on how to: install Percona Distribution for PostgreSQL 11; upgrade Percona Distribution for PostgreSQL to the next minor version. For how to install one of the latest major versions of Percona Distribution for PostgreSQL, see the following guidelines: Installing Percona Distribution for PostgreSQL 12 or Installing Percona Distribution for PostgreSQL 13 .","title":"Installation and Upgrade"},{"location":"installation-and-update.html#installation-and-upgrade","text":"This section provides instructions on how to: install Percona Distribution for PostgreSQL 11; upgrade Percona Distribution for PostgreSQL to the next minor version. For how to install one of the latest major versions of Percona Distribution for PostgreSQL, see the following guidelines: Installing Percona Distribution for PostgreSQL 12 or Installing Percona Distribution for PostgreSQL 13 .","title":"Installation and Upgrade"},{"location":"installing.html","text":"Installing Percona Distribution for PostgreSQL \u00b6 Percona provides installation packages in DEB and RPM format for 64-bit Linux distributions. Find the full list of supported platforms on the Percona Software and Platform Lifecycle page . Like many other Percona products, we recommend installing Percona Distribution for PostgreSQL from Percona repositories by using the percona-release utility. The percona-release utility automatically enables the required repository for you so you can easily install and update Percona Distribution for PostgreSQL packages and their dependencies through the package manager of your operating system. The installation process includes the following steps: Install percona-release Enable the repository Install the packages Start the postgresql service Connect to the server Repositories overview \u00b6 There are two repositories available for Percona Distribution for PostgreSQL. We recommend installing Percona Distribution for PostgreSQL from the Major Release repository (e.g. ppg-11 ) as it includes the latest version packages. Whenever a package is updated, the package manager of your operating system detects that and prompts you to update. As long as you update all Distribution packages at the same time, you can ensure that the packages you\u2019re using have been tested and verified by Percona. The Minor Release repository includes a particular minor release of the database and all the packages that were tested and verified to work with that minor release (e.g. ppg-11.8 ). You may choose to install Percona Distribution for PostgreSQL from the Minor Release repository if you have decided to standardize on a particular release which has passed rigorous testing procedures and which has been verified to work with your applications. This allows you to deploy to a new host and ensure that you\u2019ll be using the same version of all the Distribution packages, even if newer releases exist in other repositories. The disadvantage of using a Minor Release repository is that you are locked in this particular release. When potentially critical fixes are released in a later minor version of the database, you will not be prompted for an upgrade by the package manager of your operating system. You would need to change the configured repository in order to install the upgrade. Install percona-release \u00b6 Install percona-release utility. If you have installed it before, update it to the latest version. Refer to Percona repositories documentation for installation / update instructions. Enable the repository \u00b6 As soon as percona-release is installed or up-to-date, enable the repository for Percona Distribution for PostgreSQL ( ppg-11 ). We recommend using the setup command as it enables the specified repository and updates the platform\u2019s package manager database. To install the latest version of Percona Distribution for PostgreSQL, enable the Major release repository using the following command: $ sudo percona-release setup ppg-11 To install a specific minor version of Percona Distribution for PostgreSQL, enable the Minor release repository. For example, to install Percona Distribution for PostgreSQL 11.10, enable the ppg-11.10 repository using the following command: $ sudo percona-release setup ppg-11.10 Install Percona Distribution for PostgreSQL packages \u00b6 After you\u2019ve installed percona-release and enabled the desired repository , install Percona Distribution for PostgreSQL using the commands of your package manager (the procedure differs depending on the package manager of your operating system). Important Run all the commands in the following sections as root or using the sudo command. On Debian and Ubuntu using apt \u00b6 Note On Debian and other systems that use the apt package manager, such as Ubuntu, components of Percona Distribution for PostgreSQL 11 can only be installed together with the server shipped by Percona (percona-postgresql-11). If you wish to use Percona Distribution for PostgreSQL, uninstall the PostgreSQL package provided by your distribution (postgresql-11) and then install the chosen components from Percona Distribution for PostgreSQL. Platform Specific Notes \u00b6 On Debian 9 (stretch), you need to enable the llvm repository Install the percona-postgresql-11 package using the following command. $ sudo apt-get install percona-postgresql-11 Note that this package will not install the components. Use the following commands to install components\u2019 packages: Install pg_repack : $ sudo apt-get install percona-postgresql-11-repack Install pgAudit : $ sudo apt-get install percona-postgresql-11-pgaudit Install pgBackRest : $ sudo apt-get install percona-pgbackrest Install Patroni : $ sudo apt-get install percona-patroni Install pg_stat_monitor : $ sudo apt-get install percona-pg-stat-monitor11 Note You need to set up pg_stat_monitor in order to use it with Percona Distribution for PostgreSQL. Refer to Setup for configuration guidelines. Install PostgreSQL contrib extensions: $ sudo apt-get install percona-postgresql-contrib Starting the service \u00b6 The installation process automatically initializes the default database. Thus, to start Percona Distribution for PostgreSQL, use the following command: $ sudo pg_ctlcluster 11 main start Next steps: connect to PostgreSQL . On Red Hat Enterprise Linux and CentOS using yum \u00b6 Platform Specific Notes \u00b6 If you intend to install Percona Distribution for PostgreSQL on Red Hat Enterprise Linux v8, disable the postgresql module: $ sudo dnf module disable postgresql On CentOS 7, you should install the epel-release package: $ sudo yum -y install epel-release $ sudo yum repolist Install the percona-postgresql-11 package using yum install . $ sudo yum install percona-postgresql11-server Note that this package will not install the components. Use the following commands to install components\u2019 packages: Install pg_repack : $ sudo yum install percona-pg_repack11 Install pgAudit : $ sudo yum install percona-pgaudit Install pgBackRest : $ sudo yum install percona-pgbackrest Install Patroni : $ sudo yum install percona-patroni Install pg_stat_monitor : $ sudo yum install percona-pg-stat-monitor11 Note You need to set up pg_stat_monitor in order to use it with Percona Distribution for PostgreSQL. Refer to Setup for configuration guidelines. Install PostgreSQL contrib extensions: $ sudo yum install percona-postgresql11-contrib Starting the service \u00b6 After the installation, the default database storage is not automatically initialized. To complete the installation and start Percona Distribution for PostgreSQL, initialize the database using the following command: /usr/pgsql-11/bin/postgresql-11-setup initdb Start the PostgreSQL service: $ sudo systemctl start postgresql-11 Connect to the PostgreSQL server \u00b6 By default, postgres user and postgres database are created in PostgreSQL upon its installation and initialization. This allows you to connect to the database as the postgres user. $ sudo su postgres Open the PostgreSQL interactive terminal: $ psql To exit the psql terminal, use the following command: $ \\q Hint You can connect to psql as the postgres user in one go: $ sudo su postgres psql","title":"Installing Percona Distribution for PostgreSQL"},{"location":"installing.html#installing-percona-distribution-for-postgresql","text":"Percona provides installation packages in DEB and RPM format for 64-bit Linux distributions. Find the full list of supported platforms on the Percona Software and Platform Lifecycle page . Like many other Percona products, we recommend installing Percona Distribution for PostgreSQL from Percona repositories by using the percona-release utility. The percona-release utility automatically enables the required repository for you so you can easily install and update Percona Distribution for PostgreSQL packages and their dependencies through the package manager of your operating system. The installation process includes the following steps: Install percona-release Enable the repository Install the packages Start the postgresql service Connect to the server","title":"Installing Percona Distribution for PostgreSQL"},{"location":"installing.html#repositories-overview","text":"There are two repositories available for Percona Distribution for PostgreSQL. We recommend installing Percona Distribution for PostgreSQL from the Major Release repository (e.g. ppg-11 ) as it includes the latest version packages. Whenever a package is updated, the package manager of your operating system detects that and prompts you to update. As long as you update all Distribution packages at the same time, you can ensure that the packages you\u2019re using have been tested and verified by Percona. The Minor Release repository includes a particular minor release of the database and all the packages that were tested and verified to work with that minor release (e.g. ppg-11.8 ). You may choose to install Percona Distribution for PostgreSQL from the Minor Release repository if you have decided to standardize on a particular release which has passed rigorous testing procedures and which has been verified to work with your applications. This allows you to deploy to a new host and ensure that you\u2019ll be using the same version of all the Distribution packages, even if newer releases exist in other repositories. The disadvantage of using a Minor Release repository is that you are locked in this particular release. When potentially critical fixes are released in a later minor version of the database, you will not be prompted for an upgrade by the package manager of your operating system. You would need to change the configured repository in order to install the upgrade.","title":"Repositories overview"},{"location":"installing.html#install-percona-release","text":"Install percona-release utility. If you have installed it before, update it to the latest version. Refer to Percona repositories documentation for installation / update instructions.","title":"Install percona-release"},{"location":"installing.html#enable-the-repository","text":"As soon as percona-release is installed or up-to-date, enable the repository for Percona Distribution for PostgreSQL ( ppg-11 ). We recommend using the setup command as it enables the specified repository and updates the platform\u2019s package manager database. To install the latest version of Percona Distribution for PostgreSQL, enable the Major release repository using the following command: $ sudo percona-release setup ppg-11 To install a specific minor version of Percona Distribution for PostgreSQL, enable the Minor release repository. For example, to install Percona Distribution for PostgreSQL 11.10, enable the ppg-11.10 repository using the following command: $ sudo percona-release setup ppg-11.10","title":"Enable the repository"},{"location":"installing.html#install-percona-distribution-for-postgresql-packages","text":"After you\u2019ve installed percona-release and enabled the desired repository , install Percona Distribution for PostgreSQL using the commands of your package manager (the procedure differs depending on the package manager of your operating system). Important Run all the commands in the following sections as root or using the sudo command.","title":"Install Percona Distribution for PostgreSQL packages"},{"location":"installing.html#on-debian-and-ubuntu-using-apt","text":"Note On Debian and other systems that use the apt package manager, such as Ubuntu, components of Percona Distribution for PostgreSQL 11 can only be installed together with the server shipped by Percona (percona-postgresql-11). If you wish to use Percona Distribution for PostgreSQL, uninstall the PostgreSQL package provided by your distribution (postgresql-11) and then install the chosen components from Percona Distribution for PostgreSQL.","title":"On Debian and Ubuntu using apt"},{"location":"installing.html#platform-specific-notes","text":"On Debian 9 (stretch), you need to enable the llvm repository Install the percona-postgresql-11 package using the following command. $ sudo apt-get install percona-postgresql-11 Note that this package will not install the components. Use the following commands to install components\u2019 packages: Install pg_repack : $ sudo apt-get install percona-postgresql-11-repack Install pgAudit : $ sudo apt-get install percona-postgresql-11-pgaudit Install pgBackRest : $ sudo apt-get install percona-pgbackrest Install Patroni : $ sudo apt-get install percona-patroni Install pg_stat_monitor : $ sudo apt-get install percona-pg-stat-monitor11 Note You need to set up pg_stat_monitor in order to use it with Percona Distribution for PostgreSQL. Refer to Setup for configuration guidelines. Install PostgreSQL contrib extensions: $ sudo apt-get install percona-postgresql-contrib","title":"Platform Specific Notes"},{"location":"installing.html#starting-the-service","text":"The installation process automatically initializes the default database. Thus, to start Percona Distribution for PostgreSQL, use the following command: $ sudo pg_ctlcluster 11 main start Next steps: connect to PostgreSQL .","title":"Starting the service"},{"location":"installing.html#on-red-hat-enterprise-linux-and-centos-using-yum","text":"","title":"On Red Hat Enterprise Linux and CentOS using yum"},{"location":"installing.html#platform-specific-notes_1","text":"If you intend to install Percona Distribution for PostgreSQL on Red Hat Enterprise Linux v8, disable the postgresql module: $ sudo dnf module disable postgresql On CentOS 7, you should install the epel-release package: $ sudo yum -y install epel-release $ sudo yum repolist Install the percona-postgresql-11 package using yum install . $ sudo yum install percona-postgresql11-server Note that this package will not install the components. Use the following commands to install components\u2019 packages: Install pg_repack : $ sudo yum install percona-pg_repack11 Install pgAudit : $ sudo yum install percona-pgaudit Install pgBackRest : $ sudo yum install percona-pgbackrest Install Patroni : $ sudo yum install percona-patroni Install pg_stat_monitor : $ sudo yum install percona-pg-stat-monitor11 Note You need to set up pg_stat_monitor in order to use it with Percona Distribution for PostgreSQL. Refer to Setup for configuration guidelines. Install PostgreSQL contrib extensions: $ sudo yum install percona-postgresql11-contrib","title":"Platform Specific Notes"},{"location":"installing.html#starting-the-service_1","text":"After the installation, the default database storage is not automatically initialized. To complete the installation and start Percona Distribution for PostgreSQL, initialize the database using the following command: /usr/pgsql-11/bin/postgresql-11-setup initdb Start the PostgreSQL service: $ sudo systemctl start postgresql-11","title":"Starting the service"},{"location":"installing.html#connect-to-the-postgresql-server","text":"By default, postgres user and postgres database are created in PostgreSQL upon its installation and initialization. This allows you to connect to the database as the postgres user. $ sudo su postgres Open the PostgreSQL interactive terminal: $ psql To exit the psql terminal, use the following command: $ \\q Hint You can connect to psql as the postgres user in one go: $ sudo su postgres psql","title":"Connect to the PostgreSQL server"},{"location":"licensing.html","text":"Licensing \u00b6 Percona Distribution for PostgreSQL is licensed under the PostgreSQL license and licenses of all components included in the Distribution. Documentation Licensing \u00b6 Percona Distribution for PostgreSQL documentation is licensed under the PostgreSQL license .","title":"Licensing"},{"location":"licensing.html#licensing","text":"Percona Distribution for PostgreSQL is licensed under the PostgreSQL license and licenses of all components included in the Distribution.","title":"Licensing"},{"location":"licensing.html#documentation-licensing","text":"Percona Distribution for PostgreSQL documentation is licensed under the PostgreSQL license .","title":"Documentation Licensing"},{"location":"minor-upgrade.html","text":"Minor Upgrade of Percona Distribution for PostgreSQL \u00b6 Minor releases of PostgreSQL include bug fixes and feature enhancements. We recommend that you keep your Percona Distribution for PostgreSQL updated to the latest minor version. Though minor upgrades do not change the behavior, we recommend you to back up your data first, in order to be on the safe side. Minor upgrade of Percona Distribution for PostgreSQL includes the following steps: Stopping the postgresql cluster; Installing new version packages; Restarting the postgresql cluster. Note These steps apply if you installed Percona Distribution for PostgreSQL from the Major Release repository. In this case, you are always upgraded to the latest available release. If you installed Percona Distribution for PostgreSQL from the Minor Release repository, you will need to enable a new version repository to upgrade. For more information about Percona repositories, refer to Installing Percona Distribution for PostgreSQL . Before the upgrade, update the percona-release utility to the latest version. This is required to install the new version packages of Percona Distribution for PostgreSQL. Refer to Percona Software Repositories Documentation for update instructions. Important Run all commands as root or via sudo . Stop the postgresql service. On Debian / Ubuntu: $ sudo systemctl stop postgresql.service On Red Hat Enterprise Linux / CentOS: $ sudo systemctl stop postgresql-11 Install new version packages. See Installing Percona Distribution for PostgreSQL . Restart the postgresql service. On Debian / Ubuntu: $ sudo systemctl start postgresql.service On Red Hat Enterprise Linux / CentOS: $ sudo systemctl start postgresql-11 If you wish to upgrade Percona Distribution for PostgreSQL to the major version, refer to Upgrading Percona Distribution for PostgreSQL from 11 to 12 .","title":"Minor Upgrade of Percona Distribution for PostgreSQL"},{"location":"minor-upgrade.html#minor-upgrade-of-percona-distribution-for-postgresql","text":"Minor releases of PostgreSQL include bug fixes and feature enhancements. We recommend that you keep your Percona Distribution for PostgreSQL updated to the latest minor version. Though minor upgrades do not change the behavior, we recommend you to back up your data first, in order to be on the safe side. Minor upgrade of Percona Distribution for PostgreSQL includes the following steps: Stopping the postgresql cluster; Installing new version packages; Restarting the postgresql cluster. Note These steps apply if you installed Percona Distribution for PostgreSQL from the Major Release repository. In this case, you are always upgraded to the latest available release. If you installed Percona Distribution for PostgreSQL from the Minor Release repository, you will need to enable a new version repository to upgrade. For more information about Percona repositories, refer to Installing Percona Distribution for PostgreSQL . Before the upgrade, update the percona-release utility to the latest version. This is required to install the new version packages of Percona Distribution for PostgreSQL. Refer to Percona Software Repositories Documentation for update instructions. Important Run all commands as root or via sudo . Stop the postgresql service. On Debian / Ubuntu: $ sudo systemctl stop postgresql.service On Red Hat Enterprise Linux / CentOS: $ sudo systemctl stop postgresql-11 Install new version packages. See Installing Percona Distribution for PostgreSQL . Restart the postgresql service. On Debian / Ubuntu: $ sudo systemctl start postgresql.service On Red Hat Enterprise Linux / CentOS: $ sudo systemctl start postgresql-11 If you wish to upgrade Percona Distribution for PostgreSQL to the major version, refer to Upgrading Percona Distribution for PostgreSQL from 11 to 12 .","title":"Minor Upgrade of Percona Distribution for PostgreSQL"},{"location":"pg-stat-monitor.html","text":"pg_stat_monitor \u00b6 Note This is a technical preview feature and it is subject to further changes. Overview \u00b6 pg_stat_monitor is a PostgreSQL Query Performance Monitoring tool. It collects statistics data and writes it in a storage unit called bucket . The data is added and stored in a bucket for the defined period \u2013 the bucket lifetime. You can specify the following: The number of buckets. Together they form a bucket chain. Bucket size. This is the amount of shared memory allocated for buckets. Memory is divided equally among buckets. Bucket lifetime. When a bucket lifetime expires, pg_stat_monitor resets all statistics and writes the data in the next bucket in the chain. When the last bucket\u2019s lifetime expires, pg_stat_monitor returns to the first bucket. Important The contents of the bucket will be overwritten. In order not to lose the data, make sure to read the bucket before pg_stat_monitor starts writing new data to it. Setup \u00b6 After the installation , pg_stat_monitor requires additional setup in order to use it with PostgreSQL. The setup steps are the following: Add pg_stat_monitor in the shared_preload_libraries configuration parameter. The recommended way to modify PostgreSQL configuration file is using the ALTER SYSTEM command. Connect to psql and use the following command: $ ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_monitor'; The parameter value is written to the postgresql.auto.conf file which is read in addition with postgresql.conf file. Start or restart the PostgreSQL instance to enable pg_stat_monitor . Use the following command for restart: On Debian and Ubuntu: $ sudo systemctl restart postgresql.service On Red Hat Enterprise Linux and CentOS: $ sudo systemctl restart postgresql-11 Create the extension. Connect to psql and use the following command: $ CREATE EXTENSION pg_stat_monitor; Usage \u00b6 pg_stat_monitor provides two views: pg_stat_monitor is the view where statistics data is presented. pg_stat_monitor_settings shows available configuration options which you can change. To learn more, see Changing the configuration . Use the following query to view what metrics pg_stat_monitor can collect: $ \\d pg_stat_monitor; Output View \"public.pg_stat_monitor\" Column | Type | Collation | Nullable | Default ---------------------+--------------------------+-----------+----------+--------- bucket | integer | | | bucket_start_time | timestamp with time zone | | | userid | oid | | | dbid | oid | | | client_ip | inet | | | queryid | text | | | query | text | | | application_name | text | | | relations | text[] | | | cmd_type | text[] | | | elevel | integer | | | sqlcode | integer | | | message | text | | | plans | bigint | | | plan_total_time | double precision | | | plan_min_timei | double precision | | | plan_max_time | double precision | | | plan_mean_time | double precision | | | plan_stddev_time | double precision | | | calls | bigint | | | total_time | double precision | | | min_time | double precision | | | max_time | double precision | | | mean_time | double precision | | | stddev_time | double precision | | | rows | bigint | | | shared_blks_hit | bigint | | | shared_blks_read | bigint | | | shared_blks_dirtied | bigint | | | shared_blks_written | bigint | | | local_blks_hit | bigint | | | local_blks_read | bigint | | | local_blks_dirtied | bigint | | | local_blks_written | bigint | | | temp_blks_read | bigint | | | temp_blks_written | bigint | | | blk_read_time | double precision | | | blk_write_time | double precision | | | resp_calls | text[] | | | cpu_user_time | double precision | | | cpu_sys_time | double precision | | | For example, to view the IP address of the client application that made the query, run the following command: $ SELECT userid::regrole, datname, substr(query,0, 50) AS query, calls, client_ip FROM pg_stat_monitor, pg_database WHERE dbid = oid; userid | datname | query | calls | client_ip ----------+----------+---------------------------------------------------+-------+----------- postgres | postgres | select bucket, bucket_start_time, query,calls fro | 1 | 127.0.0.1 postgres | postgres | SELECT c.relchecks, c.relkind, c.relhasindex, c.r | 1 | 127.0.0.1 postgres | postgres | SELECT userid, total_time, min_time, max_time, | 1 | 127.0.0.1 Find more usage examples in pg_stat_monitor User Guide . Changing the configuration \u00b6 Run the following query to list available configuration parameters. $ SELECT name,description FROM pg_stat_monitor_settings; Output name | description -----------------------------------------------+------------------------------------------------------------------- pg_stat_monitor.pgsm_max | Sets the maximum number of statements tracked by pg_stat_monitor. pg_stat_monitor.pgsm_query_max_len | Sets the maximum length of query. pg_stat_monitor.pgsm_enable | Enable/Disable statistics collector. pg_stat_monitor.pgsm_track_utility | Selects whether utility commands are tracked. pg_stat_monitor.pgsm_normalized_query | Selects whether save query in normalized format. pg_stat_monitor.pgsm_max_buckets | Sets the maximum number of buckets. pg_stat_monitor.pgsm_bucket_time | Sets the time in seconds per bucket. pg_stat_monitor.pgsm_object_cache | Sets the maximum number of object cache pg_stat_monitor.pgsm_respose_time_lower_bound | Sets the time in millisecond. pg_stat_monitor.pgsm_respose_time_step | Sets the response time steps in millisecond. pg_stat_monitor.pgsm_query_shared_buffer | Sets the query shared_buffer size. You can change a parameter by setting a new value in the configuration file. Some parameters require server restart to apply a new value. For others, configuration reload is enough. Refer to the configuration section of the pg_stat_monitor documentation for the parameters\u2019 description, how you can change their values and if the server restart is required to apply them. As an example, let\u2019s set the bucket lifetime from default 60 seconds to 100 seconds. Use the ALTER SYSTEM command: $ ALTER SYSTEM set pg_stat_monitor.pgsm_bucket_time = 100; Restart the server to apply the change: On Debian and Ubuntu $ sudo systemctl restart restart postgresql.service On Red Hat Enterprise Linux and CentOS: $ sudo systemctl restart postgresql-11 Verify the updated parameter: $ SELECT name, value FROM pg_stat_monitor_settings WHERE name = 'pg_stat_monitor.pgsm_bucket_time'; name | value ----------------------------------+------- pg_stat_monitor.pgsm_bucket_time | 100 see also pg_stat_monitor Documentation Percona Blog: pg_stat_monitor: A New Way Of Looking At PostgreSQL Metrics","title":"pg_stat_monitor"},{"location":"pg-stat-monitor.html#pg_stat_monitor","text":"Note This is a technical preview feature and it is subject to further changes.","title":"pg_stat_monitor"},{"location":"pg-stat-monitor.html#overview","text":"pg_stat_monitor is a PostgreSQL Query Performance Monitoring tool. It collects statistics data and writes it in a storage unit called bucket . The data is added and stored in a bucket for the defined period \u2013 the bucket lifetime. You can specify the following: The number of buckets. Together they form a bucket chain. Bucket size. This is the amount of shared memory allocated for buckets. Memory is divided equally among buckets. Bucket lifetime. When a bucket lifetime expires, pg_stat_monitor resets all statistics and writes the data in the next bucket in the chain. When the last bucket\u2019s lifetime expires, pg_stat_monitor returns to the first bucket. Important The contents of the bucket will be overwritten. In order not to lose the data, make sure to read the bucket before pg_stat_monitor starts writing new data to it.","title":"Overview"},{"location":"pg-stat-monitor.html#setup","text":"After the installation , pg_stat_monitor requires additional setup in order to use it with PostgreSQL. The setup steps are the following: Add pg_stat_monitor in the shared_preload_libraries configuration parameter. The recommended way to modify PostgreSQL configuration file is using the ALTER SYSTEM command. Connect to psql and use the following command: $ ALTER SYSTEM SET shared_preload_libraries = 'pg_stat_monitor'; The parameter value is written to the postgresql.auto.conf file which is read in addition with postgresql.conf file. Start or restart the PostgreSQL instance to enable pg_stat_monitor . Use the following command for restart: On Debian and Ubuntu: $ sudo systemctl restart postgresql.service On Red Hat Enterprise Linux and CentOS: $ sudo systemctl restart postgresql-11 Create the extension. Connect to psql and use the following command: $ CREATE EXTENSION pg_stat_monitor;","title":"Setup"},{"location":"pg-stat-monitor.html#usage","text":"pg_stat_monitor provides two views: pg_stat_monitor is the view where statistics data is presented. pg_stat_monitor_settings shows available configuration options which you can change. To learn more, see Changing the configuration . Use the following query to view what metrics pg_stat_monitor can collect: $ \\d pg_stat_monitor; Output View \"public.pg_stat_monitor\" Column | Type | Collation | Nullable | Default ---------------------+--------------------------+-----------+----------+--------- bucket | integer | | | bucket_start_time | timestamp with time zone | | | userid | oid | | | dbid | oid | | | client_ip | inet | | | queryid | text | | | query | text | | | application_name | text | | | relations | text[] | | | cmd_type | text[] | | | elevel | integer | | | sqlcode | integer | | | message | text | | | plans | bigint | | | plan_total_time | double precision | | | plan_min_timei | double precision | | | plan_max_time | double precision | | | plan_mean_time | double precision | | | plan_stddev_time | double precision | | | calls | bigint | | | total_time | double precision | | | min_time | double precision | | | max_time | double precision | | | mean_time | double precision | | | stddev_time | double precision | | | rows | bigint | | | shared_blks_hit | bigint | | | shared_blks_read | bigint | | | shared_blks_dirtied | bigint | | | shared_blks_written | bigint | | | local_blks_hit | bigint | | | local_blks_read | bigint | | | local_blks_dirtied | bigint | | | local_blks_written | bigint | | | temp_blks_read | bigint | | | temp_blks_written | bigint | | | blk_read_time | double precision | | | blk_write_time | double precision | | | resp_calls | text[] | | | cpu_user_time | double precision | | | cpu_sys_time | double precision | | | For example, to view the IP address of the client application that made the query, run the following command: $ SELECT userid::regrole, datname, substr(query,0, 50) AS query, calls, client_ip FROM pg_stat_monitor, pg_database WHERE dbid = oid; userid | datname | query | calls | client_ip ----------+----------+---------------------------------------------------+-------+----------- postgres | postgres | select bucket, bucket_start_time, query,calls fro | 1 | 127.0.0.1 postgres | postgres | SELECT c.relchecks, c.relkind, c.relhasindex, c.r | 1 | 127.0.0.1 postgres | postgres | SELECT userid, total_time, min_time, max_time, | 1 | 127.0.0.1 Find more usage examples in pg_stat_monitor User Guide .","title":"Usage"},{"location":"pg-stat-monitor.html#changing-the-configuration","text":"Run the following query to list available configuration parameters. $ SELECT name,description FROM pg_stat_monitor_settings; Output name | description -----------------------------------------------+------------------------------------------------------------------- pg_stat_monitor.pgsm_max | Sets the maximum number of statements tracked by pg_stat_monitor. pg_stat_monitor.pgsm_query_max_len | Sets the maximum length of query. pg_stat_monitor.pgsm_enable | Enable/Disable statistics collector. pg_stat_monitor.pgsm_track_utility | Selects whether utility commands are tracked. pg_stat_monitor.pgsm_normalized_query | Selects whether save query in normalized format. pg_stat_monitor.pgsm_max_buckets | Sets the maximum number of buckets. pg_stat_monitor.pgsm_bucket_time | Sets the time in seconds per bucket. pg_stat_monitor.pgsm_object_cache | Sets the maximum number of object cache pg_stat_monitor.pgsm_respose_time_lower_bound | Sets the time in millisecond. pg_stat_monitor.pgsm_respose_time_step | Sets the response time steps in millisecond. pg_stat_monitor.pgsm_query_shared_buffer | Sets the query shared_buffer size. You can change a parameter by setting a new value in the configuration file. Some parameters require server restart to apply a new value. For others, configuration reload is enough. Refer to the configuration section of the pg_stat_monitor documentation for the parameters\u2019 description, how you can change their values and if the server restart is required to apply them. As an example, let\u2019s set the bucket lifetime from default 60 seconds to 100 seconds. Use the ALTER SYSTEM command: $ ALTER SYSTEM set pg_stat_monitor.pgsm_bucket_time = 100; Restart the server to apply the change: On Debian and Ubuntu $ sudo systemctl restart restart postgresql.service On Red Hat Enterprise Linux and CentOS: $ sudo systemctl restart postgresql-11 Verify the updated parameter: $ SELECT name, value FROM pg_stat_monitor_settings WHERE name = 'pg_stat_monitor.pgsm_bucket_time'; name | value ----------------------------------+------- pg_stat_monitor.pgsm_bucket_time | 100 see also pg_stat_monitor Documentation Percona Blog: pg_stat_monitor: A New Way Of Looking At PostgreSQL Metrics","title":"Changing the configuration"},{"location":"release-notes-v11-beta.html","text":"Percona Distribution for PostgreSQL 11 (Beta) \u00b6 Percona is excited to announce a beta release of Percona Distribution for PostgreSQL 11 (Beta) on August 15, 2019. Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11 (Beta)"},{"location":"release-notes-v11-beta.html#percona-distribution-for-postgresql-11-beta","text":"Percona is excited to announce a beta release of Percona Distribution for PostgreSQL 11 (Beta) on August 15, 2019. Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11 (Beta)"},{"location":"release-notes-v11.10.html","text":"Percona Distribution for PostgreSQL 11.10 \u00b6 Date: December 15, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently. This release is based on PostgreSQL 11.10 and includes pg_stat_monitor (Tech Preview Feature ) - a new statistics collection extension for PostgreSQL. The following is the list of extensions available in Percona Distribution for PostgreSQL. Extension Version Description pg_repack 1.4.6 rebuilds PostgreSQL database objects Pgaudit 1.3.2 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest 2.30 a backup and restore solution for PostgreSQL Patroni 2.0.1 a HA (High Availability) solution for PostgreSQL PostgreSQL contrib extensions 11.10 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.10. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.10"},{"location":"release-notes-v11.10.html#percona-distribution-for-postgresql-1110","text":"Date: December 15, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently. This release is based on PostgreSQL 11.10 and includes pg_stat_monitor (Tech Preview Feature ) - a new statistics collection extension for PostgreSQL. The following is the list of extensions available in Percona Distribution for PostgreSQL. Extension Version Description pg_repack 1.4.6 rebuilds PostgreSQL database objects Pgaudit 1.3.2 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest 2.30 a backup and restore solution for PostgreSQL Patroni 2.0.1 a HA (High Availability) solution for PostgreSQL PostgreSQL contrib extensions 11.10 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.10. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.10"},{"location":"release-notes-v11.11.html","text":"Percona Distribution for PostgreSQL 11.11 \u00b6 Date: March 8, 2021 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently. The following is the list of extensions available in Percona Distribution for PostgreSQL. Extension Version Description pg_repack 1.4.6 rebuilds PostgreSQL database objects Pgaudit 1.3.2 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest 2.32 a backup and restore solution for PostgreSQL Patroni 2.0.1 a HA (High Availability) solution for PostgreSQL pg_stat_monitor (Tech Preview Feature 1 ) 0.6.0 PostgreSQL contrib extensions 11.11 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 2 This release is based on PostgreSQL 11.11 . Tech Preview Features are not yet ready for enterprise use and are not included in support via SLA. They are included in this release, so that users can provide feedback prior to the full release of the feature in a future GA release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9 https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.11"},{"location":"release-notes-v11.11.html#percona-distribution-for-postgresql-1111","text":"Date: March 8, 2021 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently. The following is the list of extensions available in Percona Distribution for PostgreSQL. Extension Version Description pg_repack 1.4.6 rebuilds PostgreSQL database objects Pgaudit 1.3.2 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest 2.32 a backup and restore solution for PostgreSQL Patroni 2.0.1 a HA (High Availability) solution for PostgreSQL pg_stat_monitor (Tech Preview Feature 1 ) 0.6.0 PostgreSQL contrib extensions 11.11 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 2 This release is based on PostgreSQL 11.11 . Tech Preview Features are not yet ready for enterprise use and are not included in support via SLA. They are included in this release, so that users can provide feedback prior to the full release of the feature in a future GA release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9 https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.11"},{"location":"release-notes-v11.11.upd.html","text":"Percona Distribution for PostgreSQL 11.11 Update \u00b6 Date: April 12, 2021 Installation: Installing Percona Distribution for PostgreSQL This update of Percona Distribution for PostgreSQL includes the latest version of pg_stat_monitor 0.8.1 - the statistics collection tool for PostgreSQL. pg_stat_monitor is available as the Tech Preview Feature 1 and is supplied in the set of extensions within Percona Distribution for PostgreSQL. We welcome your feedback on your experience with pg_stat_monitor in the public JIRA project . Tech Preview Features are not yet ready for enterprise use and are not included in support via SLA. They are included in this release, so that users can provide feedback prior to the full release of the feature in a future GA release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9","title":"Percona Distribution for PostgreSQL 11.11 Update"},{"location":"release-notes-v11.11.upd.html#percona-distribution-for-postgresql-1111-update","text":"Date: April 12, 2021 Installation: Installing Percona Distribution for PostgreSQL This update of Percona Distribution for PostgreSQL includes the latest version of pg_stat_monitor 0.8.1 - the statistics collection tool for PostgreSQL. pg_stat_monitor is available as the Tech Preview Feature 1 and is supplied in the set of extensions within Percona Distribution for PostgreSQL. We welcome your feedback on your experience with pg_stat_monitor in the public JIRA project . Tech Preview Features are not yet ready for enterprise use and are not included in support via SLA. They are included in this release, so that users can provide feedback prior to the full release of the feature in a future GA release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9","title":"Percona Distribution for PostgreSQL 11.11 Update"},{"location":"release-notes-v11.11.upd2.html","text":"Percona Distribution for PostgreSQL 11.11 Second Update \u00b6 Date: May 10, 2021 Installation: Installing Percona Distribution for PostgreSQL This update of Percona Distribution for PostgreSQL includes the latest version of pg_stat_monitor 0.9.0 - the statistics collection tool for PostgreSQL. pg_stat_monitor is available as the Tech Preview Feature 1 and is supplied in the set of extensions within Percona Distribution for PostgreSQL. We welcome your feedback on your experience with pg_stat_monitor in the public JIRA project . Tech Preview Features are not yet ready for enterprise use and are not included in support via SLA. They are included in this release, so that users can provide feedback prior to the full release of the feature in a future GA release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9","title":"Percona Distribution for PostgreSQL 11.11 Second Update"},{"location":"release-notes-v11.11.upd2.html#percona-distribution-for-postgresql-1111-second-update","text":"Date: May 10, 2021 Installation: Installing Percona Distribution for PostgreSQL This update of Percona Distribution for PostgreSQL includes the latest version of pg_stat_monitor 0.9.0 - the statistics collection tool for PostgreSQL. pg_stat_monitor is available as the Tech Preview Feature 1 and is supplied in the set of extensions within Percona Distribution for PostgreSQL. We welcome your feedback on your experience with pg_stat_monitor in the public JIRA project . Tech Preview Features are not yet ready for enterprise use and are not included in support via SLA. They are included in this release, so that users can provide feedback prior to the full release of the feature in a future GA release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9","title":"Percona Distribution for PostgreSQL 11.11 Second Update"},{"location":"release-notes-v11.12.html","text":"Percona Distribution for PostgreSQL 11.12 \u00b6 Date: March 24, 2021 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently. This release is based on PostgreSQL 11.12 and includes the extended set of extensions supplied with Percona Distribution for PostgreSQL. Extension Version Description pg_repack 1.4.6 rebuilds PostgreSQL database objects PgAudit 1.3.2 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgAudit set_user 2.0.0 provides an additional layer of logging and control when unprivileged users must escalate themselves to superusers or object owner roles in order to perform needed maintenance tasks. pgBackRest 2.33 a backup and restore solution for PostgreSQL Patroni 2.0.2 a HA (High Availability) solution for PostgreSQL pg_stat_monitor (Tech Preview Feature 1 ) 0.9.1 pgBadger 11.5 a fast PostgreSQL Log Analyzer. PgBouncer 1.15.0 a lightweight connection pooler for PostgreSQL wal2json 2.3 a PostgreSQL logical decoding JSON output plugin PostgreSQL contrib extensions 11.11 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 2 Tech Preview Features are not yet ready for enterprise use and are not included in support via . They are included in this release, so that users can provide feedback prior to the full release of the feature in a future release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9 https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.12"},{"location":"release-notes-v11.12.html#percona-distribution-for-postgresql-1112","text":"Date: March 24, 2021 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently. This release is based on PostgreSQL 11.12 and includes the extended set of extensions supplied with Percona Distribution for PostgreSQL. Extension Version Description pg_repack 1.4.6 rebuilds PostgreSQL database objects PgAudit 1.3.2 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgAudit set_user 2.0.0 provides an additional layer of logging and control when unprivileged users must escalate themselves to superusers or object owner roles in order to perform needed maintenance tasks. pgBackRest 2.33 a backup and restore solution for PostgreSQL Patroni 2.0.2 a HA (High Availability) solution for PostgreSQL pg_stat_monitor (Tech Preview Feature 1 ) 0.9.1 pgBadger 11.5 a fast PostgreSQL Log Analyzer. PgBouncer 1.15.0 a lightweight connection pooler for PostgreSQL wal2json 2.3 a PostgreSQL logical decoding JSON output plugin PostgreSQL contrib extensions 11.11 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 2 Tech Preview Features are not yet ready for enterprise use and are not included in support via . They are included in this release, so that users can provide feedback prior to the full release of the feature in a future release (or removal of the feature if it is deemed not useful). This functionality can change (APIs, CLIs, etc.) from tech preview to GA. \u21a9 https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.12"},{"location":"release-notes-v11.6.html","text":"Percona Distribution for PostgreSQL 11.6 \u00b6 Percona is happy to announce the release of Percona Distribution for PostgreSQL 11.6 on January 23, 2020. Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.6. Important On Debian and other systems that use the apt package manager, such as Ubuntu, components of Percona Distribution for PostgreSQL 11 can only be installed together with the server shipped by Percona ( percona-postgresql-11 ). If you wish to use Percona Distribution for PostgreSQL, uninstall the PostgreSQL package provided by your distribution (postgresql-11) and then install the chosen components from Percona Distribution for PostgreSQL. Bugs Fixed \u00b6 DISTPG-34 : Components shipped with Percona Distribution for PostgreSQL could not be installed alongside PostgreSQL. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.6"},{"location":"release-notes-v11.6.html#percona-distribution-for-postgresql-116","text":"Percona is happy to announce the release of Percona Distribution for PostgreSQL 11.6 on January 23, 2020. Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.6. Important On Debian and other systems that use the apt package manager, such as Ubuntu, components of Percona Distribution for PostgreSQL 11 can only be installed together with the server shipped by Percona ( percona-postgresql-11 ). If you wish to use Percona Distribution for PostgreSQL, uninstall the PostgreSQL package provided by your distribution (postgresql-11) and then install the chosen components from Percona Distribution for PostgreSQL.","title":"Percona Distribution for PostgreSQL 11.6"},{"location":"release-notes-v11.6.html#bugs-fixed","text":"DISTPG-34 : Components shipped with Percona Distribution for PostgreSQL could not be installed alongside PostgreSQL. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Bugs Fixed"},{"location":"release-notes-v11.7.html","text":"Percona Distribution for PostgreSQL 11.7 \u00b6 Date: April 9, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.7. Starting from May 15, 2020, this release of Percona Distribution for PostgreSQL includes improvements to simplify the upgrade to the major version of Percona Distribution for PostgreSQL. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.7"},{"location":"release-notes-v11.7.html#percona-distribution-for-postgresql-117","text":"Date: April 9, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.7. Starting from May 15, 2020, this release of Percona Distribution for PostgreSQL includes improvements to simplify the upgrade to the major version of Percona Distribution for PostgreSQL. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.7"},{"location":"release-notes-v11.8.html","text":"Percona Distribution for PostgreSQL 11.8 \u00b6 Date: June 11, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.8. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.8"},{"location":"release-notes-v11.8.html#percona-distribution-for-postgresql-118","text":"Date: June 11, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA (High Availability) solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.8. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.8"},{"location":"release-notes-v11.9.html","text":"Percona Distribution for PostgreSQL 11.9 \u00b6 Date: September 8, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Extension Version Description pg_repack 1.4.5 rebuilds PostgreSQL database objects Pgaudit 1.4.0 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest 2.29 a backup and restore solution for PostgreSQL Patroni 2.0.0 a HA (High Availability) solution for PostgreSQL PostgreSQL contrib extensions 11.9 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.9. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.9"},{"location":"release-notes-v11.9.html#percona-distribution-for-postgresql-119","text":"Date: September 8, 2020 Installation: Installing Percona Distribution for PostgreSQL Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Extension Version Description pg_repack 1.4.5 rebuilds PostgreSQL database objects Pgaudit 1.4.0 provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest 2.29 a backup and restore solution for PostgreSQL Patroni 2.0.0 a HA (High Availability) solution for PostgreSQL PostgreSQL contrib extensions 11.9 a collection of additional extensions for PostgreSQL Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11.9. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11.9"},{"location":"release-notes-v11.html","text":"Percona Distribution for PostgreSQL 11 \u00b6 Percona is excited to announce the GA release of Percona Distribution for PostgreSQL 11 on September 17, 2019. Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11"},{"location":"release-notes-v11.html#percona-distribution-for-postgresql-11","text":"Percona is excited to announce the GA release of Percona Distribution for PostgreSQL 11 on September 17, 2019. Percona Distribution for PostgreSQL is a collection of tools to assist you in managing PostgreSQL. Percona Distribution for PostgreSQL installs PostgreSQL and complements it by a selection of extensions that enable solving essential practical tasks efficiently: Pg_repack rebuilds PostgreSQL database objects. Pgaudit provides detailed session or object audit logging via the standard logging facility provided by PostgreSQL pgBackRest - a backup and restore solution for PostgreSQL Patroni - an HA solution for PostgreSQL A collection of additional PostgreSQL contrib extensions Percona Distribution for PostgreSQL is also shipped with the libpq library. It contains \u201ca set of library functions that allow client programs to pass queries to the PostgreSQL backend server and to receive the results of these queries.\u201d 1 This release of Percona Distribution for PostgreSQL is based on PostgreSQL 11. https://www.postgresql.org/docs/11/libpq.html \u21a9","title":"Percona Distribution for PostgreSQL 11"},{"location":"release-notes.html","text":"Release Notes \u00b6 Percona Distribution for PostgreSQL 11.11 Second Update Percona Distribution for PostgreSQL 11.11 Update Percona Distribution for PostgreSQL 11.11 Percona Distribution for PostgreSQL 11.10 Percona Distribution for PostgreSQL 11.9 Percona Distribution for PostgreSQL 11.8 Percona Distribution for PostgreSQL 11.7 Percona Distribution for PostgreSQL 11.6 Percona Distribution for PostgreSQL 11 Percona Distribution for PostgreSQL 11 (Beta)","title":"Release Notes"},{"location":"release-notes.html#release-notes","text":"Percona Distribution for PostgreSQL 11.11 Second Update Percona Distribution for PostgreSQL 11.11 Update Percona Distribution for PostgreSQL 11.11 Percona Distribution for PostgreSQL 11.10 Percona Distribution for PostgreSQL 11.9 Percona Distribution for PostgreSQL 11.8 Percona Distribution for PostgreSQL 11.7 Percona Distribution for PostgreSQL 11.6 Percona Distribution for PostgreSQL 11 Percona Distribution for PostgreSQL 11 (Beta)","title":"Release Notes"},{"location":"uninstalling.html","text":"Uninstalling Percona Distribution for PostgreSQL \u00b6 To uninstall Percona Distribution for PostgreSQL, remove all the installed packages and data / configuration files. Note Should you need the data files later, back up your data before uninstalling Percona Distribution for PostgreSQL. On Debian and Ubuntu using apt \u00b6 To uninstall Percona Distribution for PostgreSQL on platforms that use apt package manager such as Debian or Ubuntu, complete the following steps. Run all commands as root or via sudo . Stop the Percona Distribution for PostgreSQL service. $ sudo systemctl stop postgresql.service Remove the percona-postgresql packages. $ sudo apt-get remove percona-postgresql-11* percona-pgbackrest percona-pg-stat-monitor11 percona-patroni Remove configuration and data files. $ rm -rf /etc/postgresql/11/main On Red Hat Enterprise Linux and CentOS using yum \u00b6 To uninstall Percona Distribution for PostgreSQL on platforms that use yum package manager such as Red Hat Enterprise Linux or CentOS, complete the following steps. Run all commands as root or via sudo . Stop the Percona Distribution for PostgreSQL service. $ sudo systemctl stop postgresql-11 Remove the percona-postgresql packages $ sudo yum remove percona-postgresql11* Remove configuration and data files $ rm -rf /var/lib/pgsql/11/data","title":"Uninstall"},{"location":"uninstalling.html#uninstalling-percona-distribution-for-postgresql","text":"To uninstall Percona Distribution for PostgreSQL, remove all the installed packages and data / configuration files. Note Should you need the data files later, back up your data before uninstalling Percona Distribution for PostgreSQL.","title":"Uninstalling Percona Distribution for PostgreSQL"},{"location":"uninstalling.html#on-debian-and-ubuntu-using-apt","text":"To uninstall Percona Distribution for PostgreSQL on platforms that use apt package manager such as Debian or Ubuntu, complete the following steps. Run all commands as root or via sudo . Stop the Percona Distribution for PostgreSQL service. $ sudo systemctl stop postgresql.service Remove the percona-postgresql packages. $ sudo apt-get remove percona-postgresql-11* percona-pgbackrest percona-pg-stat-monitor11 percona-patroni Remove configuration and data files. $ rm -rf /etc/postgresql/11/main","title":"On Debian and Ubuntu using apt"},{"location":"uninstalling.html#on-red-hat-enterprise-linux-and-centos-using-yum","text":"To uninstall Percona Distribution for PostgreSQL on platforms that use yum package manager such as Red Hat Enterprise Linux or CentOS, complete the following steps. Run all commands as root or via sudo . Stop the Percona Distribution for PostgreSQL service. $ sudo systemctl stop postgresql-11 Remove the percona-postgresql packages $ sudo yum remove percona-postgresql11* Remove configuration and data files $ rm -rf /var/lib/pgsql/11/data","title":"On Red Hat Enterprise Linux and CentOS using yum"}]}